{"version":3,"sources":["pages/Home.js","pages/QRgenerator.js","pages/Modal.js","pages/QRscanner.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Typography","style","margin","variant","Grid","container","spacing","item","xs","to","Button","size","color","padding","path","mdiQrcode","title","mdiQrcodeScan","QRgenerator","useState","qr","setQr","Fab","marginRight","ArrowBack","marginTop","TextField","onChange","event","target","value","width","label","id","includeMargin","TextareaAutosize","fontSize","height","rowsMax","defaultValue","onClick","pngUrl","document","getElementById","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","marginLeft","GetApp","Modal","props","message","display","justifyContent","alignItems","position","bottom","left","textAlign","borderRadius","background","QRscanner","setQrscan","isShowing","setIsShowing","openModal","useEffect","notiTimer","setTimeout","clearTimeout","delay","onError","err","console","error","onScan","data","paper","split","log","axios","patch","deleted","then","response","catch","App","className","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kPA+CiBA,MA1CjB,WAEI,OACI,gCAEI,cAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,OAAO,IAAKC,QAAQ,KAAxC,2BAIA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAMC,GAAG,gBAAT,SACA,cAACC,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,KAAK,QAAQC,MAAM,UAA/C,SACI,cAAC,IAAD,CACAX,MAAO,CAACY,QAAQ,IAChBC,KAAMC,IACNC,MAAM,eACNL,KAAM,GACNC,MAAM,gBAKd,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CAAMC,GAAG,cAAT,SACA,cAACC,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,KAAK,QAAQC,MAAM,UAA/C,SACI,cAAC,IAAD,CACAX,MAAO,CAACY,QAAQ,IAChBC,KAAMG,IACND,MAAM,aACNL,KAAM,GACNC,MAAM,uB,sECwCbM,MAtEjB,WAAwB,IAAD,EACCC,mBAAS,eADV,mBACZC,EADY,KACRC,EADQ,KAkBnB,OACE,gCACM,cAAC,IAAD,CAAMZ,GAAG,IAAT,SACA,cAACa,EAAA,EAAD,CAAKrB,MAAO,CAACsB,YAAY,IAAKX,MAAM,UAApC,SACI,cAACY,EAAA,EAAD,QAGJ,gDAEA,qBAAKvB,MAAO,CAACwB,UAAU,IAAvB,SACI,cAACC,EAAA,EAAD,CAAWC,SA1BF,SAACC,GAClBP,EAAMO,EAAMC,OAAOC,QAyBwB7B,MAAO,CAAC8B,MAAM,KACjDD,MAAOV,EAAIY,MAAM,aAAarB,KAAK,QAAQR,QAAQ,WAAWS,MAAM,cAIxE,8BAEQQ,EACA,cAAC,IAAD,CACIa,GAAG,OACHH,MAAOV,EACPT,KAAM,IACNuB,eAAe,IAEnB,qDAGR,8BAEQd,EACA,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACA,cAAC2B,EAAA,EAAD,CACIlC,MAAO,CAACmC,SAAS,GAAIL,MAAM,IAAKM,OAAO,KACvCC,QAAS,EACTC,aAAcnB,EACdU,MAAOV,MAGX,cAAChB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACA,cAACc,EAAA,EAAD,CAAKkB,QArDN,WACf,IACMC,EADSC,SAASC,eAAe,QAEpCC,UAAU,aACVC,QAAQ,YAAa,sBACpBC,EAAeJ,SAASK,cAAc,KAC1CD,EAAaE,KAAOP,EACpBK,EAAaG,SAAW,WACxBP,SAASQ,KAAKC,YAAYL,GAC1BA,EAAaM,QACbV,SAASQ,KAAKG,YAAYP,IA2CgB7C,MAAO,CAACqD,WAAW,IAAK1C,MAAM,UAAxD,SACI,cAAC2C,EAAA,EAAD,WAIR,S,kCCtCHC,MA/BjB,SAAeC,GAAQ,IACXC,EAAYD,EAAZC,QACR,OACE,qBACEzD,MAAO,CACL0D,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAU,QACVC,OAAQ,GACRC,KAAM,EACNjC,MAAO,OACPM,OAAQ,IATZ,SAYE,qBACEpC,MAAO,CACL8B,MAAO,MACPkC,UAAW,SACXC,aAAc,GACdC,WAAY,OACZ/B,SAAU,GACVxB,MAAO,SAPX,SAUE,4BAAI8C,SCmDGU,MApEjB,WAAsB,IAAD,EAEWjD,mBAAS,aAFpB,mBAEFkD,GAFE,aAGiBlD,oBAAS,GAH1B,mBAGVmD,EAHU,KAGCC,EAHD,KA4BXC,EAAY,WACdD,GAAa,IAejB,OAbAE,qBAAU,WACN,GAAIH,EAAW,CACX,IAAMI,EAAYC,YAAW,WACzBJ,GAAa,KACd,KACH,OAAO,kBAAMK,aAAaF,OAE/B,CAACJ,IAOF,gCACM,cAAC,IAAD,CAAM7D,GAAG,IAAT,SACA,cAACa,EAAA,EAAD,CAAKrB,MAAO,CAACsB,YAAY,IAAKX,MAAM,UAApC,SACI,cAACY,EAAA,EAAD,QAGJ,8CAEA,iCACA,sBAAKvB,MAAO,CAACwB,UAAU,IAAvB,UACI,cAAC,IAAD,CACIoD,MAAO,IACPC,QAjBI,SAAAC,GACpBC,QAAQC,MAAMF,IAiBEG,OArDG,SAAAC,GACf,GAAIA,EAAM,CACNd,EAAUc,GACV,IAGMC,EAHOD,EAGQE,MAAM,KAC3BL,QAAQM,IAAIF,EAAM,IAClBJ,QAAQM,IAAIF,EAAM,IAElBG,IAAMC,MAAM,sDAAuD,CAC/DvD,GAAKmD,EAAM,GACXK,QAAUL,EAAM,KAEnBM,MAAK,SAAUC,GACZX,QAAQM,IAAIK,MAEfC,OAAM,SAAUX,GACbD,QAAQM,IAAIL,MAEhBT,MAkCQvE,MAAO,CAAEoC,OAAQ,IAAKN,MAAO,OAEjC,8BAAMuC,GAAa,cAAC,EAAD,CAAOZ,QAAQ,iFC7BnCmC,MA5Bf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,aAAf,SAEE,cAAC,IAAD,UACE,8BAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACjF,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,kBChBDkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhE,SAASC,eAAe,SAM1BqD,K","file":"static/js/main.2d024749.chunk.js","sourcesContent":["import {Grid, Button, Typography} from '@material-ui/core';\nimport Icon from '@mdi/react'\nimport { mdiQrcode, mdiQrcodeScan } from '@mdi/js';\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n\n    return (\n        <div>\n\n            <Typography style={{margin:30}} variant=\"h2\">\n            React QR Code\n            </Typography>\n\n            <Grid container spacing={6}>\n                <Grid item xs={6}>\n                    <Link to=\"/qr_generator\">\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                        <Icon \n                        style={{padding:10}}\n                        path={mdiQrcode}\n                        title=\"QR Generator\"\n                        size={10}\n                        color=\"white\"\n                        />\n                    </Button>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link to=\"/qr_scanner\">\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                        <Icon \n                        style={{padding:10}}\n                        path={mdiQrcodeScan}\n                        title=\"QR Scanner\"\n                        size={10}\n                        color=\"white\"\n                        />\n                    </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n        \n        </div>\n    );\n  }\n  \n  export default Home;\n  ","import React, {useState} from 'react'\nimport {Fab, TextField, TextareaAutosize, Grid} from '@material-ui/core'\nimport {ArrowBack, GetApp} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QRcode from 'qrcode.react'\n\nfunction QRgenerator() {\n    const [qr, setQr] = useState('ttockclinic');\n    const handleChange = (event) => {\n        setQr(event.target.value);\n    };\n    const downloadQR = () => {\n        const canvas = document.getElementById(\"myqr\");\n        const pngUrl = canvas\n          .toDataURL(\"image/png\")\n          .replace(\"image/png\", \"image/octet-stream\");\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = pngUrl;\n        downloadLink.download = \"myqr.png\";\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n    };\n\n    return (\n      <div>\n            <Link to=\"/\">\n            <Fab style={{marginRight:10}} color=\"primary\">\n                <ArrowBack/>\n            </Fab>\n            </Link>\n            <span>QR Generator</span>\n            \n            <div style={{marginTop:30}}>\n                <TextField onChange={handleChange} style={{width:320}}\n                value={qr} label=\"QR content\" size=\"large\" variant=\"outlined\" color=\"primary\" \n                />\n            </div>\n\n            <div>\n                {\n                    qr ?\n                    <QRcode \n                        id=\"myqr\"\n                        value={qr} \n                        size={320}\n                        includeMargin={true}\n                    /> :\n                    <p>No QR code preview</p>\n                }\n            </div>\n            <div>\n                {\n                    qr ? \n                    <Grid container>\n                        <Grid item xs={10}>\n                        <TextareaAutosize\n                            style={{fontSize:18, width:250, height:100}}\n                            rowsMax={4}\n                            defaultValue={qr}\n                            value={qr}\n                        />\n                        </Grid>\n                        <Grid item xs={2}>\n                        <Fab onClick={downloadQR} style={{marginLeft:10}} color=\"primary\">\n                            <GetApp/>\n                        </Fab>\n                        </Grid>\n                    </Grid> :\n                    ''\n                }\n            </div>\n      </div>\n    );\n  }\n  \n  export default QRgenerator;\n  ","function Modal(props) {\n    const { message } = props;\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          position: \"fixed\",\n          bottom: 30,\n          left: 0,\n          width: \"100%\",\n          height: 50,\n        }}\n      >\n        <div\n          style={{\n            width: \"30%\",\n            textAlign: \"center\",\n            borderRadius: 30,\n            background: \"grey\",\n            fontSize: 20,\n            color: \"white\",\n          }}\n        >\n          <p>{message}</p>\n        </div>\n      </div>\n    );\n  }\n  \n  export default Modal;","import React, {useState, useEffect} from 'react'\nimport {Fab} from '@material-ui/core'\nimport {ArrowBack} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QrScan from 'react-qr-reader'\nimport axios from 'axios';\nimport Modal from \"./Modal\";\n\nfunction QRscanner() {\n\n    const [qrscan, setQrscan] = useState('No result');\n    const [isShowing, setIsShowing] = useState(false);\n\n    const handleScan = data => {\n        if (data) {\n            setQrscan(data)\n            var qrData = data\n\n            // String Split \n            const paper = qrData.split(' ');\n            console.log(paper[0]) // deleted \n            console.log(paper[1]) // id\n \n            axios.patch('https://www.ttockclinic.com/v1/paper/qr-usage-count', {\n                id : paper[1],\n                deleted : paper[0]\n            })\n            .then(function (response){\n                console.log(response)\n            })\n            .catch(function (error){\n                console.log(error)\n            })\n            openModal()\n        }\n    }\n    const openModal = () => {\n        setIsShowing(true);\n    }\n    useEffect(() => {\n        if (isShowing) {\n            const notiTimer = setTimeout(() => {\n                setIsShowing(false);\n            }, 3000);\n            return () => clearTimeout(notiTimer);\n        }\n    }, [isShowing]);\n    \n    const handleError = err => {\n    console.error(err)\n    }\n\n    return (\n      <div>\n            <Link to=\"/\">\n            <Fab style={{marginRight:10}} color=\"primary\">\n                <ArrowBack/>\n            </Fab>\n            </Link>\n            <span>QR Scanner</span>\n            \n            <center>\n            <div style={{marginTop:30}}>\n                <QrScan\n                    delay={300}\n                    onError={handleError}\n                    onScan={handleScan}\n                    style={{ height: 240, width: 320 }}\n                />\n                <div>{isShowing && <Modal message=\"QR 스캔이 완료되었습니다.\" />}</div>\n            </div>\n            </center>\n      </div>\n    );\n  }\n  \n  export default QRscanner;\n  ","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nimport Home from './pages/Home'\nimport QRgen from './pages/QRgenerator'\nimport QRscan from './pages/QRscanner'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n      \n        <Router>\n          <div>\n\n            <Switch>\n              <Route exact path=\"/\">\n                <Home/>\n              </Route>\n              <Route path=\"/qr_generator\">\n                <QRgen/>\n              </Route>\n              <Route path=\"/qr_scanner\">\n                <QRscan/>\n              </Route>\n            </Switch>\n\n          </div>\n        </Router>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}